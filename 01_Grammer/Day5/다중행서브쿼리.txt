< 다중 행 서브쿼리 >

 - 복수 행 서브쿼리
 - 서브쿼리의 조회 결과가 2건(2행) 이상 출력되는 서브쿼리
 - 다중 행 전용 연산자만 사용 가능하다
 - = , !=, <>등의 단일 행 연산자는 사용할 수 없다
 - 스칼라 서브쿼리로 사용 불가

< 다중 행 서브쿼리 전용 연산자 >

 - IN
	제일 많이 사용
	단일 행 연산자로 사용될 때랑 같음
	동등비교(=)를 위해 사용한다
	ex) deptno IN( SELECT~,~)

 - ANY (==SOME)
	비교컬럼이 서브쿼리의 결과 중 어떤 값이라도 조건에 만족하면 조회된다(OR의 동작과 비슷) IN과 비슷
	컬럼명 =ANY()는 IN과 같다	

	컬럼명 =ANY(a,b,c) --세개 중 하나라도 같으면 
	컬럼명 <ANY(a,b,c) -- abc중 최댓값보다 작으면 조회
 	컬럼명 >ANY(a,b,c) -- abc중 최솟값보다 크면 조회

 - ALL
	비교컬럼이 서브쿼리의 결과 중 모든 값에 조건에 만족하면 조회된다(AND결과와 비슷)

	컬럼명 =ALL(a,b,c) --> 안쓰인다(세개랑 같은 수가 없음)
	컬럼명 <ALL(a,b,c) --> abc중 최솟값보다 작으면 조회
 	컬럼명 >ALL(a,b,c) --> abc중 최댓값보다 크면 조회
	

 - EXISTS
	서브쿼리와 메인쿼리를 비교하여 서브쿼리로 조회되는 결과값으로 존재하는 행이라면 메인쿼리에서 조회되도록 한다.
	
	IN연산자는 데이터를 직접 조회하여 그 결과를 비교하고 판단한다
	EXISTS 연산자는 데이터(행) 존재하는지만 파악하고 값을 직접 비교하지는 않는다
		
 
< 다중 열 서브쿼리 >

	- 조회 결과가 여러 컬럼으로 나오는 것
	- 조회 조건을 조건절로 사용할 때 비교 컬럼을 ()로 묶어서 표현한다

	ex) WHERE(deptno,sal) IN(
		SELECT deptno,max(sal) FROM emp GROUP BY deptno);

< 집합 연산자 >

 - 두개의 쿼리 결과를 하나의 집합(결과)로 만드는 연산자
 - 조회 결과 집합(Result Set)을 하나로 합쳐서 보여준다
 - 각 조회쿼리의 결과가 컬럼수, 컬럼이름이 같아야 한다
 
 
  UNION : 합집합

  UNION ALL : 합집합(중복허용)

  INTERSECT : 교집합

  MINUS : 차집합


< 무료 ERD 웹 툴 >
https://aquerytool.com/

 - ERD(Entity Relationship Diagram
 - 개체 관계도

 - Entity : 개체, 테이블
 - Relation : 관계, 테이블간의 관계(PK,FK)

 - 그 외 무료툴
	StarUML 5.0 
	



